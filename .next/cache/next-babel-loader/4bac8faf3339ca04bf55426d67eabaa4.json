{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Malen\\\\Desktop\\\\prueba-bglobal\\\\components\\\\Tags.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\n\nvar Tags = function Tags(props) {\n  var _useState = useState(props.tags),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var updateState = function updateState(tag) {\n    setState(_objectSpread({}, state, {\n      tags: tag\n    }));\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = _getIterator(props.articles), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var art = _step.value;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = _getIterator(art.taxonomy.tags), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var tag = _step2.value;\n          console.log(tag.text);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      console.log(art.taxonomy.tags);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n        _iterator[\"return\"]();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"TAGS\"));\n};\n\nexport default Tags;","map":{"version":3,"sources":["C:/Users/Malen/Desktop/prueba-bglobal/components/Tags.jsx"],"names":["useState","Tags","props","tags","state","setState","updateState","tag","articles","art","taxonomy","console","log","text"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;;AACA,IAAMC,IAAI,GAAE,SAANA,IAAM,CAACC,KAAD,EAAS;AAAA,kBACMF,QAAQ,CAACE,KAAK,CAACC,IAAP,CADd;AAAA,MACVC,KADU;AAAA,MACJC,QADI;;AAEjB,MAAMC,WAAW,GAAC,SAAZA,WAAY,CAACC,GAAD,EAAO;AACrBF,IAAAA,QAAQ,mBACDD,KADC;AAEJD,MAAAA,IAAI,EAACI;AAFD,OAAR;AAIH,GALD;;AAFiB;AAAA;AAAA;;AAAA;AAQjB,sCAAkBL,KAAK,CAACM,QAAxB,4GAAkC;AAAA,UAAvBC,GAAuB;AAAA;AAAA;AAAA;;AAAA;AAC9B,2CAAkBA,GAAG,CAACC,QAAJ,CAAaP,IAA/B,iHAAqC;AAAA,cAA1BI,GAA0B;AACjCI,UAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,IAAhB;AACH;AAH6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAI9BF,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,QAAJ,CAAaP,IAAzB;AACH;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcjB,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAKH,CAnBD;;AAqBA,eAAeF,IAAf","sourcesContent":["import {useState} from 'react'\r\nconst Tags =(props)=>{\r\n    const [state,setState]=useState(props.tags)\r\n    const updateState=(tag)=>{\r\n        setState({\r\n            ...state,\r\n            tags:tag\r\n        })\r\n    }\r\n    for (const art of props.articles) {\r\n        for (const tag of art.taxonomy.tags) {\r\n            console.log(tag.text)\r\n        }\r\n        console.log(art.taxonomy.tags)\r\n    }\r\n    return(\r\n        <>\r\n            <p>TAGS</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tags;"]},"metadata":{},"sourceType":"module"}