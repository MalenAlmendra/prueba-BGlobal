{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _getIterator from \"@babel/runtime-corejs2/core-js/get-iterator\";\nvar _jsxFileName = \"C:\\\\Users\\\\Malen\\\\Desktop\\\\prueba-bglobal\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Posts from '../components/Posts';\nimport Tags from '../components/Tags';\nimport fetch from 'isomorphic-unfetch';\nimport '../styles/style.css';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Acumulado Grilla\")), __jsx(Tags, {\n    tags: props.tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Posts, {\n    articles: props.articles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })));\n}; //Elimina los objetos duplicados. Se utiliza para eliminar las tags repetidas\n\n\nvar deleteDuplicates = function deleteDuplicates(arr, prop) {\n  var newArray = [];\n  var lookup = {};\n\n  for (var i in arr) {\n    lookup[arr[i][prop]] = arr[i];\n  }\n\n  for (var _i in lookup) {\n    newArray.push(lookup[_i]);\n  }\n\n  return newArray;\n};\n\nIndex.getInitialProps = function _callee(req) {\n  var data, res, tags, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, art, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, tag;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api-test-ln.herokuapp.com/articles'));\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(data.json());\n\n        case 5:\n          res = _context.sent;\n          tags = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context.prev = 10;\n          _iterator = _getIterator(res.articles);\n\n        case 12:\n          if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n            _context.next = 36;\n            break;\n          }\n\n          art = _step.value;\n          _iteratorNormalCompletion2 = true;\n          _didIteratorError2 = false;\n          _iteratorError2 = undefined;\n          _context.prev = 17;\n\n          for (_iterator2 = _getIterator(art.taxonomy.tags); !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            tag = _step2.value;\n            tags.push(tag);\n          }\n\n          _context.next = 25;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](17);\n          _didIteratorError2 = true;\n          _iteratorError2 = _context.t0;\n\n        case 25:\n          _context.prev = 25;\n          _context.prev = 26;\n\n          if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n            _iterator2[\"return\"]();\n          }\n\n        case 28:\n          _context.prev = 28;\n\n          if (!_didIteratorError2) {\n            _context.next = 31;\n            break;\n          }\n\n          throw _iteratorError2;\n\n        case 31:\n          return _context.finish(28);\n\n        case 32:\n          return _context.finish(25);\n\n        case 33:\n          _iteratorNormalCompletion = true;\n          _context.next = 12;\n          break;\n\n        case 36:\n          _context.next = 42;\n          break;\n\n        case 38:\n          _context.prev = 38;\n          _context.t1 = _context[\"catch\"](10);\n          _didIteratorError = true;\n          _iteratorError = _context.t1;\n\n        case 42:\n          _context.prev = 42;\n          _context.prev = 43;\n\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n\n        case 45:\n          _context.prev = 45;\n\n          if (!_didIteratorError) {\n            _context.next = 48;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 48:\n          return _context.finish(45);\n\n        case 49:\n          return _context.finish(42);\n\n        case 50:\n          tags = deleteDuplicates(tags, 'text');\n          return _context.abrupt(\"return\", {\n            articles: res.articles,\n            tags: tags.sort(function (a, b) {\n              if (a.text > b.text) {\n                return 1;\n              }\n\n              if (a.text < b.text) {\n                return -1;\n              }\n\n              return 0;\n            })\n          });\n\n        case 52:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[10, 38, 42, 50], [17, 21, 25, 33], [26,, 28, 32], [43,, 45, 49]]);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Malen/Desktop/prueba-bglobal/pages/index.js"],"names":["Posts","Tags","fetch","Index","props","tags","articles","deleteDuplicates","arr","prop","newArray","lookup","i","push","getInitialProps","req","data","json","res","art","taxonomy","tag","sort","a","b","text"],"mappings":"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","sourcesContent":["import Posts from '../components/Posts'\r\nimport Tags from '../components/Tags'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport '../styles/style.css'\r\n\r\nconst Index=(props)=>(\r\n    <div className='container'>\r\n        <div className=\"title\">\r\n            <h1>Acumulado Grilla</h1>\r\n\r\n        </div>\r\n        <Tags tags={props.tags}/>\r\n        <div>\r\n            <Posts articles={props.articles} />\r\n            \r\n        </div>\r\n    </div>\r\n)\r\n\r\n//Elimina los objetos duplicados. Se utiliza para eliminar las tags repetidas\r\n\r\nconst deleteDuplicates=(arr,prop)=>{\r\n    let newArray = [];\r\n    let lookup  = {};\r\n \r\n     for (let i in arr) {\r\n         lookup[arr[i][prop]] = arr[i];\r\n     }\r\n \r\n     for (let i in lookup) {\r\n         newArray.push(lookup[i]);\r\n     }\r\n \r\n     return newArray;\r\n}\r\n\r\nIndex.getInitialProps=async(req)=>{\r\n    const data= await fetch('https://api-test-ln.herokuapp.com/articles')\r\n    const res = await data.json()\r\n    let tags=[]\r\n\r\n    for (const art of res.articles) {\r\n        for (const tag of art.taxonomy.tags) {\r\n            tags.push(tag)\r\n        }\r\n    }\r\n\r\n    tags=deleteDuplicates(tags,'text')\r\n\r\n    return{\r\n        articles:res.articles,\r\n        tags:tags.sort(function (a, b) {\r\n            if (a.text > b.text) {\r\n              return 1;\r\n            }\r\n            if (a.text < b.text) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}